version: '3.8'

services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=adm
      - POSTGRES_PASSWORD=ari
      - POSTGRES_DB=iclinica
    ports:
      - '5422:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - iclinica-net
    restart: unless-stopped

  db-replica:
    image: postgres:latest
    environment:
      - POSTGRES_USER=adm
      - POSTGRES_PASSWORD=ari
      - POSTGRES_DB=iclinica
      - POSTGRES_MASTER_HOST=db
      - POSTGRES_MASTER_PORT=5422
      - POSTGRES_MASTER_USER=adm
      - POSTGRES_MASTER_PASSWORD=ari
    volumes:
      - postgres-replica:/var/lib/postgresql/data
    networks:
      - iclinica-net
    restart: unless-stopped

  app-1:
    stdin_open: true
    build:
      context: .
      dockerfile: dockerfile
    command: npm run dev
    volumes: 
      - .:/usr/src/app
    environment:
      - USE_DATABASE=postgresql://adm:ari@db:5422/iclinica?schema=public
    ports:
      - "4444:4444"
    depends_on:
      - db
    networks:
      - iclinica-net
    restart: always

  app-2:
    stdin_open: true
    build:
      context: .
      dockerfile: dockerfile
    command: npm run dev
    volumes: 
      - .:/usr/src/app
    environment:
      - USE_DATABASE=postgresql://adm:ari@db:5422/iclinica?schema=public
    ports:
      - "4445:4444"  
    depends_on:
      - db
    networks:
      - iclinica-net
    restart: always

  # nginx:
  #   image: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - app-1
  #     - app-2
  #   restart: unless-stopped


volumes:
  postgres:
  postgres-replica:

networks:
  iclinica-net:
